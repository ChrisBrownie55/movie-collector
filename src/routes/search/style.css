.searchPage {
  position: relative;

  display: flex;
  flex-direction: column;
  align-items: center;

  padding-top: calc(64px + 1rem) !important;

  --avatar-size: 27px;
  --search-size: 55px;
}

@media (min-width: 800px) {
  .header {
    margin-bottom: 2rem;
  }
}

.header {
  height: var(--avatar-size);
  margin-bottom: 1.5rem;
}

.avatar {
  position: absolute;
  left: calc(50% - calc(calc(var(--search-size) / 2) + 45px));

  width: var(--avatar-size);
  height: var(--avatar-size);
  margin-top: calc(calc(var(--search-size) / 2) - calc(var(--avatar-size) / 2));

  border-radius: 50%;

  object-fit: cover;
  cursor: pointer;
}

.search {
  position: absolute;
  left: calc(50% - calc(var(--search-size) / 2));

  display: flex;
  justify-content: center;
  align-items: center;

  width: var(--search-size);
  height: var(--search-size);

  color: white;
  background-color: var(--mdc-theme-primary);

  font-size: 35px;

  border-radius: 50%;
}

.searchPage > .pageIndicator {
  display: flex;
  justify-content: center;
  align-items: center;
}

.searchPage > .pageIndicator > p {
  margin: 0 1rem;
}

.searchInput {
  position: relative;

  display: flex;
  flex-direction: column;
  align-items: center;

  width: 170px;
  height: 30px;
  margin-top: 2rem;

  background-color: hsl(263, 100%, 97%);

  border-radius: 4px;
}

.searchInput > label {
  position: absolute;

  width: 100%;
  height: 100%;

  text-align: center;
  line-height: 30px;

  transform-origin: center;
  transition: transform 0.2s;

  cursor: text;
}

.searchInput:focus-within > label,
.searchInput.inputFilled > label {
  transform: translateY(-25px) scale(0.65);
}

.searchInput > input {
  width: 100%;
  height: 100%;

  background: none;

  text-align: center;

  border: none;
}

.searchInput > input::placeholder {
  color: hsl(265, 66%, 79%);
  opacity: 0;
  transition: opacity 0.2s;
}

.searchInput > input:focus {
  outline: none;
}

.searchInput > input:focus::placeholder {
  opacity: 1;
}
